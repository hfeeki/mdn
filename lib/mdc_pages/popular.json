[{"popularity": "6958174", "content": "Extensions add new functionality to Mozilla applications such as Firefox, SeaMonkey and Thunderbird. They can add anything from a toolbar button to a completely new feature. They allow the application to be customized to fit the personal needs of each user if they need additional features, while keeping the applications small to download. Extensions are different from plugins, which help the browser display specific content like playing multimedia files. Extensions are also different from search plugins, which plug additional search engines in the search bar. Documentation General (applicable to all Mozilla apps) Setting up an extension development environment A few ...", "title": "Extensions", "id": "3438", "uri": "http://developer.mozilla.org/en/Extensions"}, {"popularity": "2149478", "content": "Build Instructions: Requirements Source Configuration Build Frequently Asked Questions More... The Mozilla source code can be obtained either by downloading a source archive, or by using a CVS (source control) client. If you are just starting out, or you wish to build a particular Mozilla product release, downloading a source archive is recommended. Otherwise, get the Mozilla Source Code Via Mercurial (for Firefox) or Comm-central Source Code via Mercurial (for Thunderbird, SeaMonkey and Firefox). Before attempting a build, please review the system requirements and build instructions. License Licensing information for the source code is on our licensing page. Download Releases ...", "title": "Downloading Source Archives", "id": "23371", "uri": "http://developer.mozilla.org/En/Developer_Guide/Source_Code/Downloading_Source_Archives"}, {"popularity": "1283938", "content": "The Mozilla build system, like the rest of the Mozilla codebase, is cross-platform. It uses traditional unix-style autoconf and make tools to build the various applications (even on non-unix operating systems). Because the Mozilla codebase builds many different applications and has many options, it is complex to use and learn. Please read these instructions carefully before attempting a build. These build pages are for the projects which use the autoconf-based build system: Firefox, Thunderbird, Mozilla Suite / SeaMonkey, XULRunner, Sunbird, standalone Composer, standalone XPCOM, and standalone XPConnect. For build information on other mozilla projects, visit their project or build page: ...", "title": "Build Instructions", "id": "12097", "uri": "http://developer.mozilla.org/En/Developer_Guide/Build_Instructions"}, {"popularity": "1125840", "content": "This article guides you through the AJAX basics and gives you two simple hands-on examples to get you started. What's AJAX? Ajax stands for Asynchronous JavaScript and XML. In a nutshell, it is the use of the nonstandard XMLHttpRequest object to communicate with server-side scripts. It can send as well as receive information in a variety of formats, including XML, HTML, and even text files. Ajax&rsquo;s most appealing characteristic, however, is its &ldquo;asynchronous&rdquo; nature, which means it can do all of this without having to refresh the page. This allows you to update portions of a page based upon user ...", "title": "Getting Started", "id": "13483", "uri": "http://developer.mozilla.org/en/AJAX/Getting_Started"}, {"popularity": "1039037", "content": "Quick Start You can use the&nbsp;Add-on Builder&nbsp;online tool to generate a simple extension to work with.&nbsp; A&nbsp;Hello World extension&nbsp;similar to what you can generate with the Extension Wizard is explained line-by-line in&nbsp;another tutorial from MozillaZine Knowledge Base. Introduction This tutorial will take you through the steps required to build a very basic extension - one which adds a status bar panel to the Firefox browser containing the text &quot;Hello, World!&quot; Note This tutorial is about building extensions for Firefox 1.5 and later.&nbsp; Other tutorials exist for building extensions for earlier versions of Firefox. For a tutorial on building an extension ...", "title": "Building an Extension", "id": "14349", "uri": "http://developer.mozilla.org/en/Building_an_Extension"}, {"popularity": "931484", "content": "This page is marked as protected temporarily for the following reason: spam. Please discuss changes that need to be made on the Talk page. OpenSearch This content covers features introduced in Firefox 2. Firefox 2 supports the OpenSearch description format for search plugins. Plugins that use the OpenSearch description syntax are compatible with IE 7 and Firefox. Because of this, they are the recommended format for use on the web. Firefox also supports additional search capabilities not included in the OpenSearch description syntax, such as search suggestions and the SearchForm element. This article will focus on creating OpenSearch-compatible search plugins ...", "title": "Creating OpenSearch plugins for Firefox", "id": "26281", "uri": "http://developer.mozilla.org/en/Creating_OpenSearch_plugins_for_Firefox"}, {"popularity": "918498", "content": "If you're a developer trying to get a handle on all the new features in Firefox 3, this is the perfect place to start. This article provides a list of the new articles covering features added to Firefox 3. While it doesn't necessarily cover every little change, it will help you learn about the major improvements. New developer features in Firefox 3 For web site and application developers Updating web applications for Firefox 3 Provides information about changes you may need to make to your web site or web application to take advantage of new features in Firefox 3. Online ...", "title": "Firefox 3 for developers", "id": "17970", "uri": "http://developer.mozilla.org/en/Firefox_3_for_developers"}, {"popularity": "903868", "content": "A re-introduction to JavaScript JavaScript is a small, lightweight, object-oriented, cross-platform scripting language. For a brief introduction, read About JavaScript. For information about using JavaScript in browsers, please see DOM and DHTML topics. The Gecko DOM Reference describes the host objects available in Gecko-based browsers. For information about embedding JavaScript engine in your application, see SpiderMonkey. Documentation Core JavaScript Reference This JavaScript reference includes complete documentation for JavaScript 1.5 and updates. JavaScript Guide Our primary guide about how to program with JavaScript. JavaScript code modules How to use JavaScript code modules to share code among privileged components. ECMAScript 5 support ...", "title": "JavaScript", "id": "3448", "uri": "http://developer.mozilla.org/en/JavaScript"}, {"popularity": "857654", "content": "This is the table of contents for the Gecko DOM reference. Preface About This Reference Who Should Read This Guide What is Gecko? API Syntax Using the Examples Introduction What is the DOM? DOM and JavaScript How Do I Access the DOM? Important Data Types DOM Interfaces Testing the DOM API DOM Object References DOM document Reference Introduction Properties Methods Event Handlers DOM element Reference Introduction Properties Methods Event Handlers DOM event Reference (with subclasses UIEvent, KeyEvent, MouseEvent) Introduction Properties Methods DOM range Reference Introduction Properties Methods DOM selection Reference Introduction Glossary Properties Methods See Also External links DOM style ...", "title": "Gecko DOM Reference", "id": "11928", "uri": "http://developer.mozilla.org/en/Gecko_DOM_Reference"}, {"popularity": "805067", "content": "Undergoing reorganization About this Reference What you should already know Formatting conventions JavaScript history Where to find JavaScript information Global Objects The term &quot;global objects&quot; here is not to be confused with the global object. Here, global objects refer to objects in the global scope. The global object itself can be accessed by this in the global scope. &nbsp; Standard global objects (By type) Basic Data types Boolean Number String Array Object Function RegExp Date (no literal equivalent as with the others in this category) Static Math Errors Error EvalError RangeError ReferenceError SyntaxError TypeError URIError Standard global objects (Alphabetical) Array ...", "title": "Core JavaScript 1.5 Reference", "id": "22238", "uri": "http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference"}, {"popularity": "732086", "content": "Getting Started An introduction to AJAX. Asynchronous JavaScript + XML, while not a technology in itself, is a term coined in 2005 by Jesse James Garrett, that describes a &quot;new&quot; approach to using a number of existing technologies together, including: HTML or XHTML, Cascading Style Sheets, JavaScript, The Document Object Model, XML, XSLT, and the XMLHttpRequest object. When these technologies are combined in the AJAX model, web applications are able to make quick, incremental updates to the user interface without reloading the entire browser page. This makes the application faster and more responsive to user actions. Documentation AJAX:Getting Started This ...", "title": "AJAX", "id": "1279", "uri": "http://developer.mozilla.org/en/AJAX"}, {"popularity": "626570", "content": "&laquo; Gecko DOM Reference Summary Returns the element whose ID is specified. Syntax element = document.getElementById(id); where element is an element object. id is a case-sensitive string representing the unique ID of the element being sought. Example &lt;html&gt; &lt;head&gt; &lt;title&gt;getElementById example&lt;/title&gt; &lt;script type=&quot;text/javascript&quot;&gt; function changeColor(newColor) { var elem = document.getElementById(&quot;para1&quot;); elem.style.color = newColor; } &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;p id=&quot;para1&quot;&gt;Some text here&lt;/p&gt; &lt;button onclick=&quot;changeColor('blue');&quot;&gt;blue&lt;/button&gt; &lt;button onclick=&quot;changeColor('red');&quot;&gt;red&lt;/button&gt; &lt;/body&gt; &lt;/html&gt; Notes If there is no element with the given id, this function returns null. Note also that the DOM implementation must have information that says which attributes are of type ID. Attributes with ...", "title": "document.getElementById", "id": "20770", "uri": "http://developer.mozilla.org/en/DOM/document.getElementById"}, {"popularity": "595383", "content": "&laquo; Gecko DOM Reference This chapter provides a brief reference for the general methods, properties, and events available to most HTML and XML elements in the Gecko DOM. Various W3C specifications apply to elements: DOM Core Specification&mdash;describes the core interfaces shared by most DOM objects in HTML and XML documents DOM HTML Specification&mdash;describes interfaces for objects in HTML and XHTML documents that build on the core specification DOM Events Specification&mdash;describes events shared by most DOM objects, building on the DOM Core and Views specifications Element Traversal Specification&mdash;describes the new attributes that allow traversal of elements in the DOM&nbsp;tree New in ...", "title": "element", "id": "4180", "uri": "http://developer.mozilla.org/en/DOM/element"}, {"popularity": "546229", "content": "Introduction This article is an overview of some powerful, fundamental DOM level 1.0 methods and how to use them from JavaScript. You will learn how to create, access and control, and remove HTML elements dynamically. The DOM methods presented here are not specific to HTML; they also apply to XML. The demonstrations provided here will work fine in any browser with full support for DOM level 1, such as the Mozilla browser or others based on it like the next-generation Navigator browser from Netscape. The code samples in this document also work on IE5. The DOM methods presented here are ...", "title": "Traversing an HTML table with JavaScript and DOM Interfaces", "id": "31465", "uri": "http://developer.mozilla.org/en/Traversing_an_HTML_table_with_JavaScript_and_DOM_Interfaces"}, {"popularity": "539790", "content": "Using the W3C DOM Level 1 Core Introduction to the W3C DOM. The Document Object Model (DOM) is an API for HTML and XML documents. It provides a structural representation of the document, enabling you to modify its content and visual presentation. Essentially, it connects web pages to scripts or programming languages. Documentation Gecko DOM Reference The Gecko Document Object Model Reference. About the Document Object Model A short introduction to the DOM. The DOM and JavaScript What is the DOM? What is JavaScript? How do I use them together on my web page? This document answers these questions and ...", "title": "DOM", "id": "837", "uri": "http://developer.mozilla.org/en/DOM"}, {"popularity": "533282", "content": "Note:&nbsp;This document descibes how to get source code for older versions of the code, Gecko 1.9.0, Firefox 3 or earlier, and all versions of NSS and NSPR. Development for Gecko 1.9.1/Firefox 3.5 and beyond uses the Mercurial source code control system. Those doing active development can check out the latest source using CVS. This is the preferred method if you plan to provide patches and fix bugs, as it lets you get up-to-the-minute changes and merge them with your own. If you want to compile a product for release, it is generally better to Download Mozilla Source Code tarballs. Getting ...", "title": "Getting Mozilla Source Code Using CVS", "id": "18247", "uri": "http://developer.mozilla.org/En/Developer_Guide/Source_Code/CVS"}, {"popularity": "499329", "content": "Plugins (or plug-ins) are shared libraries that users can install to display content that the application itself can't display natively. For example, Adobe Reader plugin lets the user open PDF files directly inside the browser, and the QuickTime and RealPlayer plugins are used to play special format videos in a web page. Plugins can be useful when building an application using the Mozilla framework. For example ActiveState Komodo uses plugins to embed the Scintilla editor in its XUL-based UI. Plugins are written using NPAPI, the cross-browser API for plugins. The main source of documentation for NPAPI is the Gecko Plugin ...", "title": "Plugins", "id": "2173", "uri": "http://developer.mozilla.org/en/Plugins"}, {"popularity": "482712", "content": "Getting Started with XULRunner A short introduction to XULRunner. XULRunner is a Mozilla runtime package that can be used to bootstrap XUL+XPCOM applications that are as rich as Firefox and Thunderbird. It will provide mechanisms for installing, upgrading, and uninstalling these applications. XULRunner will also provide libxul, a solution which allows the embedding of Mozilla technologies in other projects and products. Releases XULRunner 1.9.2 has been released and can be downloaded from releases.mozilla.org. Please read the release notes for installation, uninstallation, and other information. Firefox 3 and later ships with a private XULRunner package, which can run any compatible XULRunner ...", "title": "XULRunner", "id": "3255", "uri": "http://developer.mozilla.org/en/XULRunner"}, {"popularity": "449518", "content": "Quick Table of ContentsAbout this GuideJavaScript OverviewValues, Variables, and LiteralsExpressions and OperatorsRegular ExpressionsStatementsFunctionsWorking with ObjectsPredefined Core ObjectsDetails of the object modelInheritance revisitedIterators and generatorsClosuresLiveConnect OverviewProcessing XML with E4XExpanded Table of ContentsAbout this Guide1. New features in JavaScript versions2. What you should already know3. JavaScript versions4. Where to find JavaScript information5. Tips for learning JavaScript5.1. An interactive interpreter5.2. Firebug6. Document conventionsJavaScript Overview1. What is JavaScript?2. JavaScript and Java3. JavaScript and the ECMAScript Specification3.1. Relationship between JavaScript Versions and ECMAScript Editions3.2. JavaScript Documentation versus the ECMAScript Specification3.3. JavaScript and ECMAScript TerminologyValues, Variables, and Literals1. Values1.1. Data Type Conversion2. Variables2.1. Declaring Variables2.2. Evaluating ...", "title": "JavaScript Guide", "id": "19042", "uri": "http://developer.mozilla.org/en/JavaScript/Guide"}, {"popularity": "442349", "content": "What is JavaScript? JavaScript is the Netscape-developed object scripting language used in millions of web pages and server applications worldwide. Netscape's JavaScript is a superset of the ECMA-262 Edition 3 (ECMAScript) standard scripting language, with only mild differences from the published standard. Contrary to popular misconception, JavaScript is not &quot;Interpretive Java&quot;. In a nutshell, JavaScript is a dynamic scripting language supporting prototype based object construction. The basic syntax is intentionally similar to both Java and C++ to reduce the number of new concepts required to learn the language. Language constructs, such as if statements, for and while loops, and switch ...", "title": "About JavaScript", "id": "8619", "uri": "http://developer.mozilla.org/en/JavaScript/About_JavaScript"}, {"popularity": "436815", "content": "&laquo; Gecko DOM Reference Definition Creates a new secondary browser window and loads the referenced resource. Syntax var windowObjectReference = window.open(strUrl, strWindowName[, strWindowFeatures]); Return value and parameters windowObjectReference This is the reference pointing to the newly created browser window. This reference is the return value of the open() method; it will be null if for some reasons the execution did not succeed to open the window. A global variable is best used to store such reference. You can then, for example, use it to look for properties of the new window or access its methods, assuming that your main versus ...", "title": "window.open", "id": "7067", "uri": "http://developer.mozilla.org/en/DOM/window.open"}, {"popularity": "414614", "content": "New developer features in Firefox 2 Firefox 2 introduces a vast array of new features and capabilities. This article provides links to articles covering the new features. For web site and application developers Microsummaries Microsummaries are regularly-updated succinct compilations of the most important information on web pages. Site and third-party developers can both provide them, and users can choose to display microsummaries instead of static titles when they bookmark pages with microsummaries. Creating a Microsummary A tutorial on creating a microsummary generator. Microsummary XML grammar reference A reference guide to the XML grammar used for creating microsummary generators. Creating OpenSearch ...", "title": "Firefox 2 for developers", "id": "17599", "uri": "http://developer.mozilla.org/en/Firefox_2_for_developers"}, {"popularity": "348790", "content": "Build Instructions: Requirements Source Configuration Build Frequently Asked Questions More... The Mozilla build process requires many tools that are not installed on most Windows systems. In addition to Visual Studio, you must install MozillaBuild, a bundle of software including just the right versions of bash, GNU make, autoconf, Mercurial, and much more. This document is a guide to the MozillaBuild environment, which works with the following versions of the Mozilla codebase: Builds from Mercurial code repositories mozilla-central (1.9.3/Firefox 4) mozilla-1.9.2 (1.9.2/Firefox 3.6) tracemonkey mozilla-1.9.1 (1.9.1/Firefox 3.5) comm-central (Thunderbird 3/SeaMonkey 2) Builds from CVS code repository HEAD (1.9.0.x/Firefox 3.0.x) MOZILLA_1_8_BRANCH (1.8.1.2/Firefox ...", "title": "Windows Build Prerequisites", "id": "20835", "uri": "http://developer.mozilla.org/En/Developer_Guide/Build_Instructions/Windows_Prerequisites"}, {"popularity": "348298", "content": "&laquo; Gecko DOM Reference Summary Returns a list of elements with the given tag name. The subtree underneath the specified element is searched, excluding the element itself. Syntax elements = element.getElementsByTagName(tagName) elements is a live NodeList of found elements in the order they appear in the subtree. element is the element from where the search should start. Note that only the descendants of this element are included in the search, but not the element itself. tagName is the qualified name to look for. The special string &quot;*&quot; represents all elements. For compatibility with XHTML, lower-case should be used. In Firefox ...", "title": "element.getElementsByTagName", "id": "23662", "uri": "http://developer.mozilla.org/en/DOM/element.getElementsByTagName"}, {"popularity": "336402", "content": "XUL Tutorial A guided tutorial that will help you get started with XUL, originally from XULPlanet. XUL (XML User Interface Language) is Mozilla's XML-based language that lets you build feature-rich cross platform applications that can run connected or disconnected from the Internet. These applications are easily customized with alternative text, graphics and layout so they can be readily branded or localized for various markets. Web developers already familiar with Dynamic HTML (DHTML) will learn XUL quickly and can start building applications right away. Open XUL Periodic Table in Firefox or another Gecko-based browser to see some XUL demos. Documentation XUL ...", "title": "XUL", "id": "739", "uri": "http://developer.mozilla.org/en/XUL"}, {"popularity": "333851", "content": "This content covers features introduced in Firefox 2. JavaScript 1.7 is a language update introducing several new features, in particular generators, iterators, array comprehensions, let expressions, and destructuring assignment. It also includes all the features of JavaScript 1.6. JavaScript 1.7 support was introduced in Firefox 2. The code samples included in this article can be experimented with in the JavaScript shell. Read Introduction to the JavaScript shell to learn how to build and use the shell. Using JavaScript 1.7 In order to use some of the new features of JavaScript 1.7, you need to specify that you wish to use ...", "title": "New in JavaScript 1.7", "id": "14174", "uri": "http://developer.mozilla.org/en/JavaScript/New_in_JavaScript/1.7"}, {"popularity": "330383", "content": "Based on the Gecko 1.8 engine, Firefox 1.5 improved its already best in class standards support, and provided new capabilities to enable the next generation of web applications. Firefox 1.5 features improved support for CSS2 and CSS3, APIs for scriptable and programmable 2D graphics through SVG 1.1 and &lt;canvas&gt;, XForms and XML events, as well as many DHTML, JavaScript, and DOM enhancements. Developer Tools Several tools and browser extensions are available to help developers support Firefox 1.5. DOM Inspector, a tool that allows developers to inspect and modify documents without having to edit the document directly. DOM Inspector is available ...", "title": "Firefox 1.5 for developers", "id": "19402", "uri": "http://developer.mozilla.org/en/Firefox_1.5_for_developers"}, {"popularity": "321612", "content": "What is link prefetching? Link prefetching is a browser mechanism, which utilizes browser idle time to download or prefetch documents that the user might visit in the near future. A web page provides a set of prefetching hints to the browser, and after the browser is finished loading the page, it begins silently prefetching specified documents and stores them in its cache. When the user visits one of the prefetched documents, it can be served up quickly out of the browser's cache. Does prefetching work with HTTPS? Starting in Gecko 1.9.1 (Firefox 3.5), HTTPS content can be prefetched. What are ...", "title": "Link prefetching FAQ", "id": "12580", "uri": "http://developer.mozilla.org/en/Link_prefetching_FAQ"}, {"popularity": "308851", "content": "&laquo; Gecko DOM Reference In the DOM, the document object provides a general way to represent HTML, XHTML, and XML documents. Document objects implement the general DOM Core document interface (which itself implements the Node interface). In addition to the generalized DOM Core document interface, HTML documents also implement the DOM HTMLDocument interface, which is a more specialized interface for dealing with HTML documents (e.g., document.cookie, document.alinkColor). Methods or properties listed here that are part of this more specialized interface have an asterisk (*) next to them. The document is contained by the window object and may contain any number ...", "title": "document", "id": "5187", "uri": "http://developer.mozilla.org/en/DOM/document"}, {"popularity": "300581", "content": "Getting Started An introduction to developing themes for Firefox. Themes are skins for different Mozilla applications. They allow you to change the look and feel of the user interface and personalize it to your tastes. A theme can simply change the colors of the UI or it can change every piece of its appearance. Documentation Building a Theme A tutorial for building a simple theme in Firefox 3.0 or newer. Lightweight themes Building lightweight themes (&quot;Personas&quot;) for Firefox 3.6 or later, or Firefox 3 with the Personas add-on installed. Creating a Skin for Firefox An introduction to creating new themes ...", "title": "Themes", "id": "1807", "uri": "http://developer.mozilla.org/en/Themes"}, {"popularity": "289501", "content": "Summary Lets you work with arrays. Syntax var arr1 = new Array(arrayLength); var arr2 = new Array(element0, element1, ..., elementN); Array literals use the form: var lit = [element0, element1, ..., elementN]; Parameters arrayLength The initial length of the array. You can access this value using the length property. If the value specified is not a number, an array of length 1 is created, with the first element having the specified value. The maximum length allowed for an array is 4,294,967,295. elementN A value for the element in that position in the array. When this form is used, the array ...", "title": "Array", "id": "28782", "uri": "http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/Array"}, {"popularity": "287168", "content": "&laquo; Gecko DOM Reference This section provides a brief reference for all of the methods, properties, and events available through the DOM window object. The window object implements the Window interface, which in turn inherits from the AbstractView interface. The window object represents the window itself. The document property of a window points to the DOM document loaded in that window. A window for a given document can be obtained using the document.defaultView property. In a tabbed browser, such as Firefox, each tab contains its own window object (and if you're writing an extension, the browser window itself is a ...", "title": "window", "id": "3621", "uri": "http://developer.mozilla.org/en/DOM/window"}, {"popularity": "270737", "content": "&nbsp; The Mozilla Toolkit is a set of programming interfaces (APIs) built on top of Gecko which provide advanced services to XUL applications. These services include: Profile Management Chrome Registration Browsing History Extension and Theme Management Application Update Service Safe Mode Official References Structure of an Installable Bundle: describes the common structure of installable bundles, including extensions, themes, and XULRunner applications Extension Packaging: specific information about how to package extensions Theme Packaging: specific information about how to package themes Multiple-item Extension Packaging: specific information about multiple-item extension XPIs XUL Application Packaging: specific information about how to package XULRunner applications Chrome ...", "title": "Toolkit API", "id": "4274", "uri": "http://developer.mozilla.org/en/Toolkit_API"}, {"popularity": "268269", "content": "Most of this content (but not the documentation on drawWindow) has been rolled into the more expansive Canvas tutorial, this page should probably be redirected there as it's now redundant. Introduction With Firefox 1.5, Firefox includes a new HTML element for programmable graphics. &lt;canvas&gt; is based on the WHATWG canvas specification, which itself is based on Apple's &lt;canvas&gt; implemented in Safari. It can be used for rendering graphs, UI elements, and other custom graphics on the client. &lt;canvas&gt; creates a fixed size drawing surface that exposes one or more rendering contexts. We'll focus on the 2D rendering context (incidentally, the ...", "title": "Drawing Graphics with Canvas", "id": "21284", "uri": "http://developer.mozilla.org/en/Drawing_Graphics_with_Canvas"}, {"popularity": "262694", "content": "Summary Creates a regular expression object for matching text according to a pattern. Syntax RegExp(pattern [, flags]) /pattern/flags Parameters pattern The text of the regular expression. flags If specified, flags can have any combination of the following values: g global match i ignore case m Treat beginning and end characters (^ and $) as working over multiple lines (i.e., match the beginning or end of each line (delimited by \\n or \\r), not only the very beginning or end of the whole input string) y New in Firefox 3 Non-standard sticky; matches only from the index indicated by the lastIndex ...", "title": "RegExp", "id": "28832", "uri": "http://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Global_Objects/RegExp"}, {"popularity": "254077", "content": "This is quick set of answers to the most common issues with extension development. They are currently written with mostly Firefox in mind, but most if not all should easily translate to SeaMonkey, Thunderbird or any of the other applications. For Thunderbird, you may also find the extension HowTo or FAQ pages helpful. If you're looking for a place to get started, try our tutorial, Building an Extension or MozillaZine's Getting started tutorial. Use the Extension Wizard to generate a template to start with. Be sure to set the development preferences. Debugging You should set development preferences before attempting to ...", "title": "Extension Frequently Asked Questions", "id": "25643", "uri": "http://developer.mozilla.org/en/Extension_Frequently_Asked_Questions"}, {"popularity": "244779", "content": "&lt;canvas&gt; is a new HTML element which can be used to draw graphics using scripting (usually JavaScript). It can for instance be used to draw graphs, make photo compositions or do simple (and not so simple) animations. The image on the right shows some examples of &lt;canvas&gt; implementations which we will see later in this tutorial. &lt;canvas&gt; was first introduced by Apple for the Mac OS X Dashboard and later implemented in Safari. Gecko 1.8-based browsers, such as Firefox 1.5, also support this new element. The &lt;canvas&gt; element is part of the WhatWG Web applications 1.0 specification also known as ...", "title": "Canvas tutorial", "id": "7450", "uri": "http://developer.mozilla.org/en/Canvas_tutorial"}, {"popularity": "242486", "content": "&nbsp; Getting Started A guided tutorial that will help you get started with Cascading Style Sheets. Cascading Style Sheets (CSS) is a stylesheet language used to describe the presentation of a document written in HTML or XML (including various XML languages like XHTML or SVG). In XUL-based products like the Mozilla Suite, Firefox or Thunderbird it is also used for styling application's user interface. For example, Themes make heavy use of CSS to skin the application. CSS is a W3C specification. Documentation CSS Reference A reference to CSS and extensions on Mozilla. Using CSS transforms An introduction to CSS transforms ...", "title": "CSS", "id": "838", "uri": "http://developer.mozilla.org/en/CSS"}, {"popularity": "242171", "content": "&laquo; Gecko DOM Reference Summary addEventListener registers a single event listener on a single target. The event target may be a single node in a document, the document itself, a window, or an XMLHttpRequest. To register more than one event listeners for the target, call addEventListener for the same target but with different event types or capture parameters. Syntax target.addEventListener(type, listener, useCapture); target.addEventListener(type, listener, useCapture [, aWantsUntrusted&nbsp;Non-standard ] ); // Mozilla only type&nbsp; A string representing the event type to listen for. listener&nbsp; The object that receives a notification when an event of the specified type occurs. This must be ...", "title": "element.addEventListener", "id": "20966", "uri": "http://developer.mozilla.org/en/DOM/element.addEventListener"}]